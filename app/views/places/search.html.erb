<!DOCTYPE html>
<html>

<head>
  <title>Nearby Places</title>
  <style>
    #map {
      height: 400px;
      width: 100%;
    }
  </style>
</head>

<body>
  <h3>Nearby <%= case @type when 'cafe'
                                 'Cafes'
                            when 'movie_theater'
                                 'Movie Theaters'
                            when 'park'
                                 'Basketball Courts'
                            end %></h3>
  <div id="map"></div>
  <div id="info"></div>

  <script>
    function initMap() {
      let map = new google.maps.Map(document.getElementById('map'), {
        zoom: 12,
        center: {
          lat: 35.6895,
          lng: 139.6917
        },
      });

      let currentInfoWindow = null; // 現在のモーダルを保持

      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          let pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };

          new google.maps.Marker({
            map: map,
            position: pos,
            icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
          });

          map.setCenter(pos);

          let service = new google.maps.places.PlacesService(map);
          service.nearbySearch({
              location: pos,
              radius: 2000,
              type: ['<%= @type %>'],
            },
            function(results, status) {
              if (status === google.maps.places.PlacesServiceStatus.OK) {
                results.forEach((place) => {
                  let marker = new google.maps.Marker({
                    map: map,
                    position: place.geometry.location,
                    title: place.name,
                    icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',
                  });

                  let infoWindow = new google.maps.InfoWindow();

                  marker.addListener('click', () => {
                    // 他のモーダルを閉じる
                    if (currentInfoWindow) currentInfoWindow.close();

                    infoWindow.setContent(`
                      <div>
                        <strong>${place.name}</strong><br>
                        Address: ${place.vicinity}<br>
                        Rating: ${(place.rating || 'N/A')}<br>
                        <button class="favorite-btn" data-name="${place.name}" data-address="${place.vicinity}" data-lat="${place.geometry.location.lat()}" data-lng="${place.geometry.location.lng()}">
                          お気に入りに追加
                        </button>
                      </div>
                    `);
                    infoWindow.open(map, marker);
                    currentInfoWindow = infoWindow;
                  });
                });
              }
            }
          );
        });
      }
    }

    // お気に入りボタンのクリックイベント
    document.addEventListener('click', (e) => {
      if (e.target.classList.contains('favorite-btn')) {
        const name = e.target.getAttribute('data-name');
        const address = e.target.getAttribute('data-address');
        const lat = e.target.getAttribute('data-lat');
        const lng = e.target.getAttribute('data-lng');

        const csrfToken = document.querySelector('meta[name="csrf-token"]').content;

        fetch('/favorites', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrfToken,
            },
            body: JSON.stringify({
              favorite: {
                place_name: name,
                place_address: address,
                place_lat: lat,
                place_lng: lng,
              },
            }),
          })
          .then((response) => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then((data) => {
            alert(data.message || 'お気に入りに追加しました！');
          })
          .catch((error) => {
            console.error('Error:', error);
            alert('お気に入りの追加に失敗しました');
          });
      }
    });
  </script>

  <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&libraries=places&callback=initMap" async defer></script>
</body>

</html>